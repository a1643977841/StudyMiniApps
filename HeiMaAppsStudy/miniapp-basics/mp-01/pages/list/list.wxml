<!--pages/list/list.wxml-->
<!-- view就类似于html里面的div -->
<view class="view1">
    <view>A</view>
    <view>B</view>
    <view>C</view>
</view>
<!-- 
    scroll-view是一个可以滚动的组件
    scroll-y属性：允许纵向滚动
    scroll-x属性：允许横向滚动
    注意：使用竖向滚动时，必须给scroll-view固定一个高度 反之固定一个宽度
 -->
<scroll-view class="scroll-view1" scroll-y="50px">
    <view>A</view>
    <view>B</view>
    <view>C</view>
</scroll-view>
<!-- 
    轮播图
    indicator-dots：设置小圆点
    indicator-color: 未激活小圆点的颜色
    indicator-active-color: 激活小圆点的颜色
    autoplay: 自动切换轮播图
    interval: 指定多少毫秒切换一次
    circular: 是否采用衔接滑动
 -->
 <swiper class="swiper1" 
    indicator-dots 
    indicator-color="white" 
    indicator-active-color="gray" 
    autoplay interval="3000"
    circular>
    <!-- 第一个轮播图 -->
    <swiper-item>
        <view class="item">A</view>
    </swiper-item>
    <!-- 第二个轮播图 -->
    <swiper-item>
        <view class="item">B</view>
    </swiper-item>
    <!-- 第三个轮播图 -->
    <swiper-item>
        <view class="item">C</view>
    </swiper-item>
 </swiper>
 <view>~~~~~text和rich-text 的用法~~~~~~~~~~~~</view>
<!-- 常用的基础内容组件 text和rich-text 的用法 -->
<view>
    <!-- 支持选中必须添加selectable属性 -->
    手机号支持长按选中效果
    <text selectable>15792227055</text>
</view>
<!-- nodes可以把html标签渲染为UI标签 -->
<rich-text nodes="<h1 style='color: red'>标题:15792227055</h1>">

</rich-text>
<view>~~~~~其他常用组件 button、image~~~~~~~~~~~~</view>
<!-- 其他常用组件 button、image -->
<!-- 通过 openopen-type 属性可以调用微信提供的各种功能（客服、转发、获取用户授权、获取用户信息等） -->
<view>~~~~~~~~~~~通过type指定类型~~~~~~~~~~~~</view>
<button>默认按钮</button>
<button type="primary">主色调按钮</button>
<button type="warn">警告按钮</button>
<!-- 小尺寸按钮 -->
<view>~~~~~~~~~~~小尺寸按钮~~~~~~~~~~~~</view>
<button size="mini">默认按钮</button>
<button type="primary" size="mini">主色调按钮</button>
<button type="warn" size="mini">警告按钮</button>
<!-- 镂空按钮 -->
<view>~~~~~~~~~~~镂空按钮~~~~~~~~~~~~</view>
<button size="mini" plain>默认按钮</button>
<button type="primary" size="mini" plain>主色调按钮</button>
<button type="warn" size="mini" plain>警告按钮</button>
<!-- image空图片 -->
<view>~~~~~~~~~~~image~~~~~~~~~~~~</view>
<image class="image1"></image>
<!-- 
    node的属性值：
        scaleToFill:（默认值）缩放模式， 不保持纵横比缩放图片 ，使图片的宽高完全拉伸至 填满 image
        aspectFit：缩放模式， 保持纵横比缩放图片，使图片的长边能完全显示出来 。也就是说，可以完整地将图片显示出来。
        aspectFill：缩放模式， 保持纵横比缩放图片，只保证图片的短边能完全显示出来 。也就是说，图片通常只在水平或垂直方
        widthFix：缩放模式， 宽度不变，高自动化 ，保持原图宽高比不变
        heightFix: 缩放模式， 高度不变，宽自动化 ，保持原图宽高比不变
 -->
<image src="/images/1.png" mode="aspectFit"></image>
